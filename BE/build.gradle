plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
ext {
	springCloudVersion = "2024.0.0"  // 최신 Spring Cloud 버전
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// 레디스 설정
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


	// Selenium
	implementation 'org.seleniumhq.selenium:selenium-java:4.26.0'
	implementation 'io.github.bonigarcia:webdrivermanager:5.9.2'

	// security 의존성, 시큐리티 이슈 발생 시 아래 의존성 주석처리
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// MapStruct
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

	// ★ 추가 1) OkHttp
	implementation 'com.squareup.okhttp3:okhttp:4.10.0'

	// ★ 추가 2) (선택) Jackson databind – 이미 spring-boot-starter-web이 Jackson을 포함하지만,
	//          버전을 명시하거나 외부에서 사용을 명확히 하고 싶다면 아래처럼 추가.
	 implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'

	// WebClient 사용 시 (Clova OCR 등 API 통신)
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	
	// jwt 토큰
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'


	// feign client
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// AWS S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
}



dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


tasks.named('test') {
	useJUnitPlatform()
}
